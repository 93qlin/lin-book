{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-07 22:49:23 "},"UseInJob/":{"url":"UseInJob/","title":"工作常用代码","keywords":"","body":"工作中常用到的代码 Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-08 10:26:29 "},"UseInJob/Js.html":{"url":"UseInJob/Js.html","title":"Js ✘","keywords":"","body":"/* * 2018年7月25日10:38:23 * 移动端rem适配，px:rem = 100:1 * 该适配兼容UC竖屏转横屏出现的BUG * 自定义设计稿的宽度：designWidth * 最大宽度:maxWidth * 这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750) */ ! function (e, t) { function n() { var n = l.getBoundingClientRect().width; t = t || 540, n > t && (n = t); var i = 100 * n / e; r.innerHTML = \"html{font-size:\" + i + \"px;}\" } var i, d = document, o = window, l = d.documentElement, r = document.createElement(\"style\"); if (l.firstElementChild) l.firstElementChild.appendChild(r); else { var a = d.createElement(\"div\"); a.appendChild(r), d.write(a.innerHTML), a = null } n(), o.addEventListener(\"resize\", function () { clearTimeout(i), i = setTimeout(n, 300) }, !1), o.addEventListener(\"pageshow\", function (e) { e.persisted && (clearTimeout(i), i = setTimeout(n, 300)) }, !1), \"complete\" === d.readyState ? d.body.style.fontSize = \"16px\" : d.addEventListener( \"DOMContentLoaded\", function (e) { d.body.style.fontSize = \"16px\" }, !1) }(1000, 1000); Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-08 10:33:00 "},"CssAndHtml/Interview/Html.html":{"url":"CssAndHtml/Interview/Html.html","title":"Html ✘","keywords":"","body":" HTML 属于结构层，负责描绘出内容的结构。 CSS 属于表示层，负责如何显示有关内容。 JavaScript 属于行为层，负责内容应如何对事件做出反应。 HTML学习推荐 《前端工程师手册》 《HTML 教程- (HTML5 标准) - 菜鸟教程》 HTML语义化 语义化的含义就是用正确的标签做正确的事情，HTML 语义化就是让页面的内容结构化，它有如下优点： 便于对浏览器、搜索引擎解析； 便于盲人浏览网页； 便于阅读源代码的人对网站进行分开，维护和理解； 简单来说，能用 、 等 H5 新标签的就不用 ，不要使用 来存放段落等…… HTML5 新标签 HTML5 中新增标签大致有：、、、、、、等等。 常见浏览器及其内核 Chrome Firefox Safari IE Opera 排版引擎 Blink Gecko Webkit Trident Blink JS 引擎 V8 SpiderMonkey Nitro Chakra V8 国内一些浏览器使用较多的是 Webkit 内核。 针对不同浏览器内核，HTML 辨别： IE 内核浏览器识别： 非 IE 内核浏览器识别： 针对不同浏览器内核，CSS 辨别： /* 设置文字不可选取 */ * { -moz-user-select: none; /* 火狐 浏览器 */ -webkit-user-select: none; /* Webkit 浏览器 */ -o-user-select: none; /* Opera 浏览器 */ -ms-user-select: none; /* IE10 浏览器 */ -khtml-user-select: none; /* 早期浏览器 */ user-select: none; /* 默认 */ } cookies、session、sessionStorage、localStorage cookies：存储于浏览器端的数据。可以设置 cookies 的到期时间，如果不设置时间，则在浏览器关闭窗口的时候会消失。 session：存储于服务器端的数据。session 存储特定用户会话所需的属性和配置信息。 cookies 和 session 的区别在于： cookies 数据存放在客户的浏览器上，session 数据存放在服务器上。 前端都是裸君子，没有安全可言，cookies 可能会被黑客利用作数据欺骗。所以重要信息记得存 session。 session 如果在生效期内量过大，会占用服务器性能。 单个 cookies 保存的数据不能超过 4 K，很多浏览器限制一个站点保存最多 20 个 cookies。 sessionStorage：生命周期存在于标签页或窗口，用于本地存储一个会话（session）中的数据，这些数据会随着窗口或者标签页的关闭而被清空。 localStorage：生命周期是永久的，除非用户主动清除浏览器上存储的 localStorage 信息，否则它将会永久存在。 sessionStorage 和 localStorage 操作方法：setItem、getItem 以及 removeItem。 以 localStorage 为例： localStorage.getItem('name'); // 获取 name 的值 localStorage.setItem('name', 'jsliang'); // 设置 name 的值为 jsliang localStorage.removeItem('name'); // 删除 name 的值 参考 1：《前端分享之cookie的使用及单点登录》参考 2：《Cookie、session和localStorage、以及sessionStorage之间的区别》 Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 19:42:11 "},"CssAndHtml/Interview/Css.html":{"url":"CssAndHtml/Interview/Css.html","title":"Css ✘","keywords":"","body":"CSS CSS 属于表示层，负责如何显示有关内容。 CSS 学习推荐 《前端工程师手册》 《CSS 权威指南》 《CSS 揭秘》 《CSS 世界》 4.2 CSS reset 返回目录 在工作的过程中，会发现各式各样的浏览器对某个标签有自己独特的样式。 但是在前端开发中，如果不采用统一标准，那么会产生千奇百怪的 bug。所以为了减少后期 bug 的出现，前端开发人员会重置一遍 CSS 样式，尽可能地使开发的网页在各个浏览器相差不大。 下面是 jsliang 在使用的样式重置，当然如果小伙伴有不同的想法，可以去 百度/必应/google 搜索并使用其他版本的样式重置： jsliang 的 CSS 样式重置 CSS 盒模型 Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 19:42:08 "},"CssAndHtml/":{"url":"CssAndHtml/","title":"Html和Css","keywords":"","body":"Html和Css相关 Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 19:41:12 "},"CssAndHtml/Interview/":{"url":"CssAndHtml/Interview/","title":"面试必问 ✘","keywords":"","body":"Html和Css面试相关 Copyright © lin 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 19:41:23 "}}